<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <value>classpath:depcfg.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pub.platform.db.ConnectionManager.sDBDriver}"/>
        <property name="url" value="${pub.platform.db.ConnectionManager.sConnStr}"/>
        <property name="username" value="${pub.platform.db.ConnectionManager.user}"/>
        <property name="password" value="${pub.platform.db.ConnectionManager.passwd}"/>
        <property name="maxActive" value="15"/>
        <property name="maxIdle" value="5"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="dep,common"/>

    <!-- enable autowire -->
    <context:annotation-config/>

    <!--<tx:jta-transaction-manager />-->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <bean id="hmbSocketServer" class="dep.gateway.xsocket.server.XSocketServer">
        <property name="port" value="${socket_watcher_port_hmb}"/>
        <property name="serverHandler" ref="hmbServerHandler"/>
        <property name="MIN_SIZE_WORKER_POOL" value="2"/>
        <property name="SIZE_WORKER_POOL" value="20"/>
    </bean>

    <bean id="cmbSocketServer" class="dep.gateway.xsocket.server.XSocketServer">
        <property name="port" value="${socket_watcher_port_cbs}"/>
        <property name="serverHandler" ref="cbsServerHandler"/>
        <property name="MIN_SIZE_WORKER_POOL" value="2"/>
        <property name="SIZE_WORKER_POOL" value="10"/>
    </bean>

    <bean id="webSocketServer" class="dep.gateway.xsocket.server.XSocketServer">
        <property name="port" value="${socket_watcher_port_web}"/>
        <property name="serverHandler" ref="webServerHandler"/>
        <property name="MIN_SIZE_WORKER_POOL" value="2"/>
        <property name="SIZE_WORKER_POOL" value="10"/>
    </bean>

    <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:common/repository/hmfs/mapper/**/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="common.repository.hmfs.dao"/>
    </bean>

    <!-- 自动签到签退 cronTrigger -->
    <bean id="autoSignHandler" class="dep.hmfs.batch.AutoSignHandler"/>
    <bean id="signonJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="autoSignHandler"/>
        <property name="targetMethod" value="signon"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="signonCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="signonJobDetailBean"/>
        <property name="cronExpression" value="0 0 6 * * ?"/>
    </bean>
    <bean id="signoutJobDetailBean"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="autoSignHandler"/>
        <property name="targetMethod" value="signout"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="signoutCronTriggerBean" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="signoutJobDetailBean"/>
        <property name="cronExpression" value="0 00 17 * * ?"/>
    </bean>

    <!-- 设置调度 -->
    <bean id="myScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="signonCronTriggerBean"/>
                <ref bean="signoutCronTriggerBean"/>
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.threadCount">1</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            </props>
        </property>
    </bean>
</beans>